"""subscription2

Revision ID: 8bab040979a5
Revises: alter_account_id_to_bigint
Create Date: 2025-04-16 00:44:35.592531

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8bab040979a5'
down_revision: Union[str, None] = 'alter_account_id_to_bigint'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_subscriptions')
    op.drop_index('ix_company_revenue_id', table_name='company_revenue')
    op.drop_table('company_revenue')
    op.drop_column('users', 'subscription_end_date')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('subscription_end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_table('company_revenue',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('week_start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('week_end_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('weekly_revenue', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('total_revenue', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('streak_rewards_paid', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('total_streak_rewards_paid', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='company_revenue_pkey'),
    sa.UniqueConstraint('week_start_date', name='company_revenue_week_start_date_key')
    )
    op.create_index('ix_company_revenue_id', 'company_revenue', ['id'], unique=False)
    op.create_table('user_subscriptions',
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('jan_subscribed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('feb_subscribed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('mar_subscribed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('apr_subscribed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('may_subscribed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('jun_subscribed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('jul_subscribed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('aug_subscribed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('sep_subscribed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('oct_subscribed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('nov_subscribed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('dec_subscribed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('total_payments', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('last_payment_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.account_id'], name='user_subscriptions_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'year', name='user_subscriptions_pkey')
    )
    # ### end Alembic commands ###
