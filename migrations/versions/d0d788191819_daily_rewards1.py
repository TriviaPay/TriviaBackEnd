"""daily_rewards1

Revision ID: d0d788191819
Revises: 93165f61509c
Create Date: 2025-04-15 21:55:35.906597

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd0d788191819'
down_revision: Union[str, None] = '93165f61509c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_daily_rewards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('week_start_date', sa.Date(), nullable=False),
    sa.Column('day1_status', sa.String(), nullable=False),
    sa.Column('day2_status', sa.String(), nullable=False),
    sa.Column('day3_status', sa.String(), nullable=False),
    sa.Column('day4_status', sa.String(), nullable=False),
    sa.Column('day5_status', sa.String(), nullable=False),
    sa.Column('day6_status', sa.String(), nullable=False),
    sa.Column('day7_status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['users.account_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_daily_rewards_id'), 'user_daily_rewards', ['id'], unique=False)
    op.drop_table('daily_questions_backup')
    op.drop_constraint('daily_questions_date_question_number_key', 'daily_questions', type_='unique')
    op.create_index(op.f('ix_daily_questions_id'), 'daily_questions', ['id'], unique=False)
    op.create_unique_constraint('unique_date_question', 'daily_questions', ['date', 'question_number'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('unique_date_question', 'daily_questions', type_='unique')
    op.drop_index(op.f('ix_daily_questions_id'), table_name='daily_questions')
    op.create_unique_constraint('daily_questions_date_question_number_key', 'daily_questions', ['date', 'question_number'])
    op.create_table('daily_questions_backup',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('question_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_common', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('question_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_used', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('was_changed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('correct_answer', sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.drop_index(op.f('ix_user_daily_rewards_id'), table_name='user_daily_rewards')
    op.drop_table('user_daily_rewards')
    # ### end Alembic commands ###
